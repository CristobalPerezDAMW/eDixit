<?php
$ruta='..';
$pag = 'Nosotros';
require("../cabecera.php");
?>

<div class="container nosotros">
    <div class="row">
        <div class="col-12">
            <h2>Contacto con un Admnistrador</h2>
        </div>
        <div class="col-12">
            <p>Si tienes algún problema, duda, sugerencia o queja por favor escríbenos a nuestro correo electrónico <a href="mailto:cristobalperez.dam@gmail.com">cristobalperez.dam@gmail.com</a>. Te responderemos lo antes posible.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <h2>Cuento de un Programador</h2>
        </div>
        <div class="col-12">
            <p>Me llamo Cristóbal Pérez Rubio, soy estudiante del I.E.S. Murgi y vivo y he vivido siempre en El Ejido, Almería. Soy un programador entusiasta al que le gusta pasar el tiempo libre programando o jugando a juegos de habilidad o de creación, como League of Legends o Little Big Planet, respectivamente, y quien ha desarrollado eDixit como Proyecto Integrado. Desde pequeño siempre me ha gustado poder moldear las cosas a mi gusto, personalizarlas, ya fueran los lápices o mi mesa en el instituto (con papel, ya aprendí la lección de no pintar en la mesa). El arte del papel y el pegamento era lo mío en tiempos de leer Platero y Yo, educación primaria.<p>
            <p>Es por eso que me interesaron, en primer lugar, los videojuegos. Encontraba en el repertorio de videojuegos que tenía una variedad que me permitía elegir según mis gustos. Conforme avancé en la vida, poco a poco el repertorio se fue achicando, según unos juegos caían en popularidad y todos se aferraban a lo que vendía bien. En secundaria, en el I.E.S. Fuente Nueva me interesó mucho la asignatura de tecnología, creo que en el tercer curso, con un profesor llamado Julián. Con Julián aprendí lo que será siempre la primera forma de programación que aprendí: hojas de cálculo. Aprendí a automatizar la solución de ciertos problemas matemáticos, a organizar todo de modo que fuera fácil de entender por alguien que sabía lo que tenía que pasar pero no sabía cómo quería yo que pasara (sí, tuve problemas con mi especial forma de hacer las cosas ya desde el mismo principio de todo).</p>
            <p>Al año siguiente, en cuarto de la ESO, con el mismo profesor dí mi siguiente paso: aprendí un poco de HTML. Fue poca cosa, pero aprendí sobre módulos de programas de forma indirecta. Veréis, el caso es que teníamos que hacer una página HTML (sólo 1, un index y nada más) y podíamos copiar código de otras páginas siempre y cuando supiéramos exactamente lo que hacía, y sin que sobrara nada. Si una etiqueta o una línea de JavaScript estaba fuera de sitio o no hacían nada y no nos dábamos cuenta, era un gran fallo. De este modo, aprendí a identificar qué secciones de código formaban un bloque único, dónde cortar y qué líneas extra coger de otros lugares (como declaración de variables más adelante o condiciones que son siempre ciertas si coges un cierto código sin nada externo). Para ello, más que conocimientos, fue cuestión de prueba y error, aunque un así me sigue sirviendo lo que hice aquel entonces para organizar algo por módulos.</p>
            <p>El siguiente paso fue, de nuevo, con el mismo profesor y en el mismo instituto, pero esta vez en primero de bachillerato al año siguiente. Allí aprendí dos cosas muy importantes: programación por software y programación por hardware. Julián admiraba mi capacidad para diseñar circuitos lógicos (con puertas lógicas) directamente optimizados, sin necesidad de hacer ninguna cuenta lógica ni de usar papel y boli. La técnica de Julián consistía en traducir los enunciados a un circuito lógico literalmente, según las palabras iba una puerta u otra y punto, sin pensar nada. Después, aplicando las leyes lógicas reducías el circuito y obtenías una versión optimizada que cumplía las mismas posibles salidas que el circuito anterior y más grande. Sin embargo, con lo que no contaba Julián es que yo ya conocía los misterios de las puertas lógicas desde hace tiempo, y es que os habría mentido si os hubiera dicho que Julian me enseñó a programar por hardware, ya que aprendí por mi cuenta jugando a Little Big Planet. Si buscáis un poco sobre el juego descubriréis que es un juego de creatividad en el que podemos jugar a los niveles creados por los desarrolladores del juego también podemos crear los nuestros. Y claro, si mi Súper Robot de Protones con Misiles Supertásticos de 4000 Muchiflops va a lanzar misiles guiados necesito saber un poco de lógica, como por ejemplo poner sensores al robot y según qué sensores están activados hacer que se activen unos propulsores u otros para que corrija su trayectoria durante el viaje hacia el enemigo, ¡y también podría poner un botón de autodestrucción por si la cosa falla y me veo corriendo a toda mecha! Por eso yo ya sabía de puertas lógicas cuando llegué a bachillerato, y por eso aprobé esa parte de la asignatura sin el más mínimo esfuerzo y sin hacer una sola cuenta matemática ni aprender ninguna ley lógica que no conociera intuitivamente de antes. Aunque desde luego no fue un curso perdido, ni mucho menos, pues Julián me enseñó a hacer mi primer programa software como tal en Scratch. Resultaba muy sencillo aprender Scratch una vez sabías de puertas lógicas, porque su programación visual la hacía muy cercana a la programación por hardware. También intenté enseñarle yo a Julián aquel año una cosa llamada Redstone, que es algo así como electrónica en el famoso juego Minecraft, que funciona diferente a la electricidad de la vida real pero que se puede usar apra hacer los mismos componentes electrónicos que os permiten leer estos párrafos ahora.</p>
            <p>El mismo año tuve también mi primera clase de informática fuera de la clase extraescolar que tuve en educación infantil, que ni siquiera he mencionado antes porque fue como mucho una clase de mecanografía y el resto fue todo Minijuegos.com y un DVD de un juego de Lucky Luck. En fin, el caso es que aprendí sobretodo ofimática y matemáticas booleanas (vamos, en base 2, que sólo hay 0s y 1s). Aprendí a usar Blender (aunque actualizaron la interfaz poco después de modo que de nuevo ando perdido en el tema) y también vi por primera vez un ordenador por dentro (entendiendo lo que veía, quiero decir. Alguna vez antes había visto ordenadores desmontados en el almacén del taller de tecnología, pero sabiendo poco más que por dónde se enchufaba).</p>
            <p>En segundo de bachiller descansé un poco de todo el tema de programar, aprendiendo otras cosas en tecnología como cálculos de energía en motores y demás, aunque no descansé de Little Big Planet, sobretodo con sus siguientes entregas LBP2 y LBP3. Recuerdo en especial un nivel de miedo que consistía en que un jugador era invisible a los demás y tenía que matarlos del susto (y con muchos pinchos, claro), mientras ellos intentaban esconderse y huir.</p>
            <p>Al año siguiente entré en la universidad en Ingeniería Informática, a sabiendas de que la parte de matemáticas (al menos la parte que fuera muy abstracta, no lógica o booleana) me iba a costar mucho superar (y no tenía mucho esperanza de superarla, aunque aun así lo intentaría con todas mis fuerzas porque terminar la carrera sería un logro increíble para mí y no podía perder la oportunidad), pero el resto de asignaturas fueron bastante bien. Saqué una nota sobresaliente en programación (en la que dimos sólo Java), aunque me costó un poco al principio porque hasta entonces no había programado nunca por puro texto y no me aclaraba con esos de las clases ni del método main. Para mi propia sorpresa también pasé de buen grado la asignatura de Estructura de Computadores, de la cuál siempre hubo debate en clase en si daba más miedo el nombre o el contenido (yo siempre aposté por el contenido).</p>
            <p>Al siguiente año volví a intentar las dos asignaturas de matemáticas (en las que no había ni conseguido acercar la nota al 5 mínimo el año anterior) y también cogí un par de asignaturas de relax, como la de Metodología de la Programación, que era simplemente avanzar más en programación, como archivos y tal. En esta asignatura ya me veía muy suelto en la programación orientada a objetos, y para aplicar todo lo que iba aprendiendo empecé a desarrollar un Tamagochi. Al principio era en consola y sin mucho que hacer, pero luego fui agregando las cosas que íbamos aprendiendo como ordenación de arrays, aleatoriedad e incluso llegando al final del curso aproveché la única clase de Swing (que no formaba parte del curso, la dimos por su importancia y no caía en examen por necesitar de una asignatura completa para enseñarla correctamente) para darle una interfaz gráfica. También hice una especie de PokéDex durante ese curso tras aprender a hacer interfaces visuales, ya con más imágenes y mucho más de escritura y lectura archivos. Ya entonces me negaba a usar las herramientas que ayudaban a guardar cosas complicadas como la clase Serializable, a mí siempre me ha gustado más complicar la cosa y guardar (en texto o binario) los datos haciendo trato complejo de los String, sobretodo dada la poca prisa que tenía por ir desarrollando aquellas "chapucillas" (como nos gustaba a mis profesores y a mí llamar a las cosas que programaba fuera de clase).</p>
            <p>Al siguiente año no me atrevía a volver a intentar la parte de matemáticas por tercera vez. Aunque mis padres siguieron insistiendo en que el dinero no era problema y que supuestamente yo podía, preferí esta vez aprovechar mis conocimientos de programación para ir a un módulo de informática. Así acabé el siguiente año en el módulo superior de Desarrollo de Aplicaciones Multiplataforma, en el I.E.S. Murgi. En el primer curso no aprendí nada nuevo de programación, pero aprendí casi todo lo que sé ahora de Base de Datos con Paco y lo más importante de todo lo que me perdí del módulo medio (que pude saltarme gracias a mi título de bachiller) con David. Lo que más aprendí pudo ser Linux, hasta entonces sabía de Linux lo poco que había usado Guadalinex en la ESO y un poco de bash que tampoco me ayudaba a navegar y orientarme en la consola de comandos, y tras pasar el curso ya sabía hacer todo lo básico y todo lo que necesité hacer ese año. También ese curso me interesé por Android, ya que usaba Java, de modo que aprendí a crear un proyecto, su estructura, qué código se ejecutaba y por qué, qué interfaz visual cogía el móvil y por qué, qué librerías usaba y qué me dejaban hacer, permisos, emulación... En fin, de todo.</p>
            <p>Pero después de todo, el siguiente año tuve problemas para pasar la asignatura de Android. Yo siempre he sido de memoria reducida, muy malo para los nombres y tal (de modo que siempre me apoyaba mucho en la documentación a la hora de programar), y aquel año Ana, mi profesora de Android, se empeñó mucho en la importancia de saber de memoria las características de cada versión de Android. Hasta tal punto que en el examen final llegó a costarme 5 puntos esa pregunta. También ese año me costó mucho aprender, y también por culpa de mi memoria, la asignatura de empresas (en la cuál no se puede deducir el funcionamiento de nada porque todo es más arbitrario que práctico o lógico). Aunque no todo fue malo, aprendí a establecer conexiones TPC y UDP en Java, lo que todavía tengo pendiente de usar en algún proyecto personal, y a conectar programas y bases de datos. Además, aprendí a hacer aplicaciones en UWP, a trabajar con canvas (que ya sabía de antes pero nunca me había visto obligado a usarlo, ni tampoco me ha terminado de gustar nunca a pesar de su utilidad y de lo graciosos que son los errores en canvas), a trabajar con Odoo, que trabajar en un ERP es una buena forma de hacerse rico en informática, un poco de primeros auxilios y a desplegar una aplicación web hecha en Java con un servidor Tomcat. ¡Y también conseguí algo de experiencia laboral! Muy útil, sobretodo cuando te piden más expericia que otra cosa para encontrar trabajo.</p>
            <p>Tras conseguir, por los pelos, el título de Desarrollo de Aplicaciones Multiplataforma, y con la recomendación de mi amigo Jony, que ese año terminó su segundo módulo de informática, entré en Desarrollo de Aplicaciones Web, eso fue el comienzo del curso actual, y que hoy termino escribiendo estos párrafos. Este año di, si cabe, incluso más cosas nuevas para mí que el año anterior: he aprendido a trabajar con HTML y CSS, a usar Bootstrap, a usar JavaScript, a usar herramientas que no fueran mi querido Eclipse, a montar servidores según las necesidades y opciones disponibles, a programar con PHP, las características de programar en servidor y en cliente de modo que pueda saber en qué lugar necesito que se realice qué acción, a saber cómo hacer conexiones más seguras, y supongo que este año también he aprendido a organizarme un poco mejor.</p>
            <p>De modo que ésta es mi historia como programador, desde elegir el videojuego que más me fuera a gustar a hacerlo yo mismo, aunque todavía queda mucho por recorrer hasta hacer un videojuego en Unreal Engine, de modo que este cuento aún no ha acabado y aunque este año espero trabajar todavía quedan muchos años y mucho que aprender hasta que pueda vivir feliz y programar perdices.</p>
        </div>
    </div>
</div>
</body>

</html>